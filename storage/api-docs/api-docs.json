{
    "openapi": "3.0.0",
    "info": {
        "title": "SisFrete API",
        "description": "API documentation for SisFrete challenge",
        "contact": {
            "email": "phcampos0401@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/orders": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Creates a new order with products and returns the order details",
                "operationId": "d690d6834318e9b064df441e854de8b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "products"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "property": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create order."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{order}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order",
                "description": "Updates the products of an existing order. The customer_id cannot be changed. Products not included will be removed from the order. New products will be added.",
                "operationId": "9f326acfc8febad161872da8dc13508f",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "products"
                                ],
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "property": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update order."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a list of products with filters and pagination",
                "description": "Returns a paginated list of products. You can filter by name, description, price (with operator), and product types.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter products by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Headphones"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter products by description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Noise cancelling"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Filter products by price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 999.99
                        }
                    },
                    {
                        "name": "operator",
                        "in": "query",
                        "description": "Operator for price comparison (e.g., =, <, >, <=, >=)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "<="
                        }
                    },
                    {
                        "name": "product_type[]",
                        "in": "query",
                        "description": "Filter products by one or multiple product types",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "Electronics",
                                "Clothing"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/products?page=1"
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/products?page=3"
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://127.0.0.1:8000/api/products"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 45
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Order": {
                "title": "Order",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "customer": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "payment": {
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "Waiting for approval"
                            },
                            "proof": {
                                "type": "string",
                                "example": "https://placehold.co/600x400?text=payment+proof+sisfrete"
                            }
                        },
                        "type": "object"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 1234.56
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 7
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Headphones"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 299.99
                                },
                                "amount": {
                                    "type": "integer",
                                    "example": 2
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 7
                    },
                    "name": {
                        "type": "string",
                        "example": "Headphones"
                    },
                    "description": {
                        "type": "string",
                        "example": "Noise cancelling"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 299.99
                    },
                    "productTypes": {
                        "description": "List of product types associated with this product",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Electronics"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ]
}